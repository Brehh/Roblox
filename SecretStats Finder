local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local TitleBar = Instance.new("Frame")
local TitleLabel = Instance.new("TextLabel")
local MinimizeButton = Instance.new("TextButton")
local CloseButton = Instance.new("TextButton")
local ScrollingFrame = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local SearchBox = Instance.new("TextBox")

-- Determine if the device is mobile or PC
local screenSize = game:GetService("GuiService"):GetScreenResolution()
local isMobile = screenSize.Y <= 800  -- A rough check for mobile devices based on screen height

-- Set up the ScreenGui
ScreenGui.Parent = game:GetService("CoreGui")  -- Parent to CoreGui for persistence
ScreenGui.Name = "FolderListGui"

-- Set up the MainFrame with dynamic size based on device type
MainFrame.Parent = ScreenGui
MainFrame.Size = isMobile and UDim2.new(0, 250, 0, 300) or UDim2.new(0, 300, 0, 450)
MainFrame.Position = UDim2.new(0.5, -MainFrame.Size.X.Offset / 2, 0.5, -MainFrame.Size.Y.Offset / 2)
MainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true

-- Set up the TitleBar
TitleBar.Parent = MainFrame
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)

-- Set up the TitleLabel
TitleLabel.Parent = TitleBar
TitleLabel.Size = UDim2.new(1, -60, 1, 0)
TitleLabel.Position = UDim2.new(0, 10, 0, 0)
TitleLabel.Text = "Folder List"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Font = Enum.Font.SourceSansBold
TitleLabel.TextSize = 18

-- Set up the MinimizeButton
MinimizeButton.Parent = TitleBar
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
MinimizeButton.Text = "-"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MinimizeButton.BorderSizePixel = 0

-- Set up the CloseButton
CloseButton.Parent = TitleBar
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
CloseButton.BorderSizePixel = 0

-- Set up the ScrollingFrame with dynamic size based on device type
ScrollingFrame.Parent = MainFrame
ScrollingFrame.Size = UDim2.new(1, 0, 1, -70)
ScrollingFrame.Position = UDim2.new(0, 0, 0, 70)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollingFrame.ScrollBarThickness = 10
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
ScrollingFrame.BorderSizePixel = 0

-- Set up the UIListLayout
UIListLayout.Parent = ScrollingFrame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Set up the SearchBox with dynamic size based on device type
SearchBox.Parent = MainFrame
SearchBox.Size = UDim2.new(1, -20, 0, 30)
SearchBox.Position = UDim2.new(0, 10, 0, 35)
SearchBox.PlaceholderText = "Search..."
SearchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
SearchBox.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
SearchBox.BorderSizePixel = 0
SearchBox.Font = Enum.Font.SourceSans
SearchBox.TextSize = 18

-- Function to list folders with only one child and create buttons
local function ListFoldersWithOneChild(searchTerm)
    for _, folder in pairs(ScrollingFrame:GetChildren()) do
        if folder:IsA("TextButton") then
            folder:Destroy()
        end
    end

    for _, folder in pairs(workspace['Buttons']:GetChildren()) do
        if folder:IsA("Folder") and #folder:GetChildren() == 1 then
            if not searchTerm or folder.Name:lower():find(searchTerm:lower()) then
                local button = Instance.new("TextButton")
                button.Parent = ScrollingFrame
                button.Size = UDim2.new(1, 0, 0, 30)
                button.Text = folder.Name
                button.TextColor3 = Color3.fromRGB(255, 255, 255)
                button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                button.BorderSizePixel = 0
                button.Font = Enum.Font.SourceSans
                button.TextSize = 18

                -- Connect button click to the action
                button.MouseButton1Click:Connect(function()
                    local part = folder:GetChildren()[1]:FindFirstChild("hit")  -- The only child
                    if part then  -- Check if 'hit' part exists
                        local player = game.Players.LocalPlayer
                        local character = player.Character or player.CharacterAdded:Wait()
                        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

                        firetouchinterest(humanoidRootPart, part, 0)  -- Simulate the start of a touch
                        wait()  -- Optional: small delay
                        firetouchinterest(humanoidRootPart, part, 1)  -- Simulate the end of a touch
                    else
                        warn("No 'hit' part found in " .. folder.Name)
                    end
                end)
            end
        end
    end

    -- Update the canvas size to fit all items
    ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)
end

-- Connect search box to filter results
SearchBox.Changed:Connect(function(property)
    if property == "Text" then
        ListFoldersWithOneChild(SearchBox.Text)
    end
end)

-- Call the function to list folders initially
ListFoldersWithOneChild()

-- Minimize and restore functionality
local isMinimized = false

MinimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        MainFrame:TweenSize(UDim2.new(0, MainFrame.Size.X.Offset, 0, 30), "Out", "Quad", 0.3, true)  -- Tween for smooth minimize
        ScrollingFrame.Visible = false
        SearchBox.Visible = false
    else
        local targetSize = isMobile and UDim2.new(0, 250, 0, 300) or UDim2.new(0, 300, 0, 450)
        MainFrame:TweenSize(targetSize, "Out", "Quad", 0.3, true)  -- Tween for smooth restore
        ScrollingFrame.Visible = true
        SearchBox.Visible = true
    end
end)

-- Close button functionality
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)
