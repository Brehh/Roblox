

local vim = game:GetService('VirtualInputManager')


for i, v in pairs(game.Players.LocalPlayer.PlayerGui.MainGui.Stats:GetChildren()) do
   if v.Name:sub(1,1) == "E" and v.Name ~= 'E0' then
	if v.Choice.Visible then
                wait(0.5)
                for c, d in pairs(getconnections(v.Choice.MouseButton1Click)) do
                    local mouseButton1ClickFunction = d.Function
                    mouseButton1ClickFunction(v:FindFirstChildOfClass("LocalScript"))
                end
        end
       v.Choice:GetPropertyChangedSignal("Visible"):Connect(function()
            if v.Choice.Visible then
                wait(0.5)
                for c, d in pairs(getconnections(v.Choice.MouseButton1Click)) do
                    local mouseButton1ClickFunction = d.Function
                    mouseButton1ClickFunction(v:FindFirstChildOfClass("LocalScript"))
                end
            end
        end)
    end
end


local mystats = game:GetService("ReplicatedStorage").Stats[game.Players.LocalPlayer.Name]
local where = mystats.WHERE.ST
local camera = workspace.CurrentCamera


function click()
    game:GetService("ReplicatedStorage").Action.GymUse:FireServer("CL")
end

function uppercut()
    vim:SendKeyEvent(true, Enum.KeyCode['Space'], false, game)
    task.wait()
    vim:SendKeyEvent(false, Enum.KeyCode['Space'], false, game)
end


function isNumber(x)
	return tonumber(x) ~= nil
end

function getdoing(box)
    local wowtable = {}
    local highest = -math.huge
    local current
    if not box.TV:FindFirstChildWhichIsA('SurfaceGui') then return end
    local guis = box.TV:FindFirstChildWhichIsA('SurfaceGui')
    for i,v in next, guis:GetChildren() do
        if v.BackgroundColor3 == Color3.fromRGB(27, 42, 53) and v.Visible == true then
            table.insert(wowtable,v)
        end
    end
    for i,v in next,wowtable do
        if v.ZIndex > highest then
            current = v.Text
            highest = v.ZIndex
        end
    end

    if isNumber(current) then
        return tonumber(current)
    else
        return current
    end
end

function getMax(box)
    local wowtable = {}
    local highest = -math.huge
    local current
    if not box.TV:FindFirstChildWhichIsA('SurfaceGui') then return end
    local guis = box.TV:FindFirstChildWhichIsA('SurfaceGui')
    for i,v in next, guis:GetChildren() do
        if v.BackgroundColor3 ~= Color3.fromRGB(27, 42, 53) and v.Visible == true and v.Position.Y.Scale < 1 then
            table.insert(wowtable,v)
        end
    end
    for i,v in next,wowtable do
        if v.ZIndex > highest then
            current = v.Text
            highest = v.ZIndex
        end
    end
    return tonumber(current)
end

local vim = game:GetService('VirtualInputManager')
local waiting = nil
local mainmin = 0

_G.a = true

while _G.a do
    if where.Value:find('BOX') then
        local box = game:GetService("Workspace").Machinery[where.Value]
        local min = getdoing(box)
        local max = getMax(box)
        
        
        if type(min) == 'number' then
            waiting = nil
            if min ~= mainmin then
                if (max - min) >= 100 then
                    task.wait(0.33)
                    uppercut()
                    mainmin = min
                else
                    click()
                end
            end
        elseif not waiting then
            mainmin = 0
            waiting = true
            wait(2)
            uppercut()
        end
    end
    wait()
end
