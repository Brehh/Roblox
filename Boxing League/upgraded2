print('WORK')

pcall(function()
    game:GetService("ReplicatedStorage").UITrada.SY:Destroy()
end)


local folder

if not game:GetService("ReplicatedStorage"):FindFirstChild('Player') then
    folder = Instance.new('Folder',game:GetService("ReplicatedStorage"))
    folder.Name = 'Player'
else
    folder = game:GetService("ReplicatedStorage"):FindFirstChild('Player')
end

local s_rs = game:GetService("RunService")
local l_plr = game:GetService("Players").LocalPlayer
local vim = game:GetService('VirtualInputManager')
local gameSettings = UserSettings().GameSettings
local inFullscreen = gameSettings:InFullScreen()
local l_humrp = l_plr.Character and l_plr.Character:FindFirstChild("HumanoidRootPart")
local l_hum = l_plr.Character and l_plr.Character:FindFirstChild("Humanoid")

local resp_con = l_plr.CharacterAdded:Connect(function(c) 
    l_humrp = c:WaitForChild("HumanoidRootPart",3)
    l_hum = c:WaitForChild("Humanoid",3)
end)



local function dnec(signal) 
    local s = {}
    for _, con in ipairs(getconnections(signal)) do 
        local func = con.Function
        if (func and islclosure(func)) then
            if (not is_synapse_function(func)) then 
                s[#s+1] = con
                con:Disable() 
            end
        end
    end
    return s
end

local speed_amnt = 0.5
local bef = game:GetService("ReplicatedStorage").Stats[l_plr.Name].WHERE
local t = game:GetService("ReplicatedStorage").Stats[l_plr.Name].KiPending.WZ
local bruh = game:GetService("ReplicatedStorage").Stats[l_plr.Name].KiPending
local fight = game:GetService("ReplicatedStorage").Stats[l_plr.Name]:FindFirstChild('M1V1')
local check = false



    do
    local a,b

function getplayer(mode)
    if mode == 1 then
        _G.mode = 2
        for i,v in next, game.Players:GetChildren() do
            if v ~= game.Players.LocalPlayer and v.Name ~= fight.ALLY.Value and v.Name ~= fight.E1.Value and v.Name ~= fight.E2.Value then
                v.Character.Parent = folder
            end
        end
    elseif mode == 2 then
        for i,v in next, folder:GetChildren() do
            _G.mode = 1
            v.Parent = workspace
        end
    end
end

if not _G.mode then
    _G.mode = 1

    local Players = game:GetService("Players")

    Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function(character)
            if _G.mode == 2 then
                player.Character.Parent = folder
            end
        end)
    end)

    for i,v in next,game.Players:GetChildren() do
        if v ~= game.Players.LocalPlayer then
            v.CharacterAdded:Connect(function(character)
                if _G.mode == 2 then
                    v.Character.Parent = folder
                end
            end)
        end
    end
end

fight:GetPropertyChangedSignal("Value"):Connect(function()
    if fight.Value == 'A' then
        getplayer(2)
    else
        getplayer(1)
    end
end)

bef:GetPropertyChangedSignal("Value"):Connect(function()
    if bef.Value == 'A' then
            s_rs:UnbindFromRenderStep("speed")
            
            for i,v in ipairs(a) do 
                v:Enable()
            end
            for i,v in ipairs(b) do 
                v:Enable()
            end
            check = false
    end
end)


    t:GetPropertyChangedSignal("Value"):Connect(function()
        if t.Value == false and check == false then
            a = dnec(l_humrp.Changed)
            b = dnec(l_humrp:GetPropertyChangedSignal("CFrame"))
            
            s_rs:BindToRenderStep("speed",2000,function(dt)
                l_humrp.CFrame += l_hum.MoveDirection*dt*5*speed_amnt
            end)
            check = true
        elseif t.Value == true then
            s_rs:UnbindFromRenderStep("speed")
            
            for i,v in ipairs(a) do 
                v:Enable()
            end
            for i,v in ipairs(b) do 
                v:Enable()
            end
            check = false
        end
    end)
end

bruh:GetPropertyChangedSignal("Value"):Connect(function()
 if bruh.Value == -2 then
  while bruh.Value == -2 do
   game:GetService("ReplicatedStorage").UseItem:FireServer("Use")
   task.wait()
  end
 end
end)

print('YES')
local PlayerGui = game:GetService("Players").LocalPlayer.PlayerGui


PlayerGui.ChildAdded:Connect(function(Object)
    local getobj
    local getbestdex = -99999999999999999
    local e = 0
    local b = 0
    if Object.Name == 'VS' then
        
        wait(0.2)
        while e ~= 1 do
            b = 0
            getbestdex = -99999999999999999
            for i,v in next,Object:WaitForChild('ZN'):GetChildren() do
            if v.MC.MX.Value > 0 and v.ZIndex > getbestdex then
              getbestdex = v.ZIndex
              getobj = v
            end
             
            if getobj ~= nil then
            local obj = getobj.MC.TV
                while b ~= 1 do
                 if getobj.MC.MX.Value > 0 then
                    b = 0
                    local xddd = obj.AbsolutePosition + obj.AbsoluteSize / 2
                    if not inFullscreen then
                        vim:SendMouseButtonEvent(xddd.X,xddd.Y+50, 0, true, game, 1)
                        vim:SendMouseButtonEvent(xddd.X,xddd.Y+50, 0, false, game, 1)
                    else
                        vim:SendMouseButtonEvent(xddd.X,xddd.Y, 0, true, game, 1)
                        vim:SendMouseButtonEvent(xddd.X,xddd.Y, 0, false, game, 1)
                    end
                    wait(0.06)
                 else
                    b = 1
                    wait()
                 end
                end
                wait()
            else
            e = 1
            wait(0.1)
            end
            end
        end
    end
end)

-- Gui to Lua
-- Version: 3.2
print('AYO')
-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
ScreenGui.ResetOnSpawn = false

-- Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BackgroundTransparency = 0
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.398564816, 0, 0.115716755, 0)
Frame.Size = UDim2.new(0.248149976, 0, 0.046632126, 0)

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(1, 0, 1, 0)
TextLabel.Font = Enum.Font.SourceSansBold
TextLabel.TextColor3 = Color3.fromRGB(255, 85, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

-- ฟังก์ชันตรวจสอบ opponent
function check()
    local opponent = game:GetService("ReplicatedStorage").Stats[game.Players.LocalPlayer.Name].M1V1.E1.Value
    local playerList = {}

    for i, v in next, game.Players:GetPlayers() do
        table.insert(playerList, tostring(v))
    end

    if table.find(playerList, opponent) then
        return opponent  -- คืนค่า opponent เมื่อพบแล้ว
    else
        TextLabel.Text = ''
        Frame.Visible = false
        repeat
            opponent = game:GetService("ReplicatedStorage").Stats[game.Players.LocalPlayer.Name].M1V1.E1.Value
            table.clear(playerList)
            for i, v in next, game.Players:GetPlayers() do
                table.insert(playerList, tostring(v))
            end
            wait(1)
        until table.find(playerList, opponent)
        return opponent
    end
end

print('WP')

while task.wait(0.1) do
    local opponent = check()  -- เรียก check() ครั้งเดียวแล้วเก็บไว้ในตัวแปร
    if opponent then
        local playerObj = game.Players:FindFirstChild(opponent)
        if playerObj and playerObj.Character then
            local character = playerObj.Character
            local humanoid = character:WaitForChild("Humanoid")
            local Animator = humanoid:WaitForChild("Animator")
            -- ถ้า GetPlayingAnimationTracks คืนค่า nil ให้แทนที่ด้วยตารางว่าง
            local playingAnimations = Animator:GetPlayingAnimationTracks() or {}
            
            local moves = nil
            for i, v in ipairs(playingAnimations) do
                if v.Animation.AnimationId == 'rbxassetid://3738519606' then
                    moves = 'Uppercut'
                    break
                elseif v.Animation.AnimationId == 'rbxassetid://3738476938' then
                    moves = 'Kick'
                    break
                elseif v.Animation.AnimationId == 'rbxassetid://782845736' then
                    moves = 'StringCross'
                    break
                elseif v.Animation.AnimationId == 'rbxassetid://3738307442' then
                    moves = 'Double Kick'
                    break
                elseif v.Animation.AnimationId == 'rbxassetid://3738310509' then
                    moves = 'Spin Kick'
                    break
                elseif v.Animation.AnimationId == 'rbxassetid://6375133992' then
                    moves = 'OverHand'
                    break
                elseif v.Animation.AnimationId == 'rbxassetid://4555527945' then
                    moves = '360 Uppercut'
                    break
                elseif v.Animation.AnimationId == 'rbxassetid://3738299383' then
                    moves = 'Spammer'
                    break
                elseif v.Animation.AnimationId == 'rbxassetid://5171193156' then
                    moves = 'String Cross'
                    break
                end
            end
            
            if moves then
                TextLabel.Text = moves
                Frame.Visible = true
            else 
                TextLabel.Text = ''
                Frame.Visible = false
            end
        end
    end
end
